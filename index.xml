<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>xiaonan&#39;s Blog</title>
        <link>https://fengqigang.cn/</link>
        <description>xiaonan&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>gaungsizhongbin@gmail.com (fengxiaonan)</managingEditor>
            <webMaster>gaungsizhongbin@gmail.com (fengxiaonan)</webMaster><lastBuildDate>Thu, 05 Nov 2020 16:29:13 &#43;0800</lastBuildDate>
            <atom:link href="https://fengqigang.cn/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Cron</title>
    <link>https://fengqigang.cn/posts/cron/</link>
    <pubDate>Thu, 05 Nov 2020 16:29:13 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://fengqigang.cn/posts/cron/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>LinkList</title>
    <link>https://fengqigang.cn/posts/linklist/</link>
    <pubDate>Sat, 31 Oct 2020 22:07:50 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://fengqigang.cn/posts/linklist/</guid>
    <description><![CDATA[链表代码实现 命名规范 Node
LinkList
GetElem
ListInsert
ListDelete
CreateListHead
CreateListTail
ClearList
TravelList
结点创建思路 创建单链表的思路  头插入法    srand
 头文件  srand (time(0))    rand
 头文件  生成1-100的整数 rand()%100 + 1    尾插入法  除了头结点外，还需要一个结点来记当前尾结点在哪里
查找某个元素的值的思路   从第一个结点开始，只有当前结点不为空并且还没到第i个结点，就继续
  若到达链尾或i值不正确，报错
  否则查找成功，返回结点p的数据
  链表插入某个值的思路   找到
  插入
  ]]></description>
</item><item>
    <title>Neovim</title>
    <link>https://fengqigang.cn/posts/neovim/</link>
    <pubDate>Sat, 31 Oct 2020 19:00:52 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://fengqigang.cn/posts/neovim/</guid>
    <description><![CDATA[<p>Neovim 是我最喜欢的编辑器</p>]]></description>
</item><item>
    <title>Linear_list</title>
    <link>https://fengqigang.cn/posts/linear_list/</link>
    <pubDate>Fri, 30 Oct 2020 20:51:45 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://fengqigang.cn/posts/linear_list/</guid>
    <description><![CDATA[顺序表代码实现  #define 与 typedef 的区别: 1   #define OK 1
当使用OK的时候会替换成1
#define 归预处理器管
  typedef int Status 定义int 为Status类型
typedef 归编译器管
     命名规范：
  SqList 这样的两个单词的合并，首字母要大写, 如ElemType, GetElem, ListDelete
  使用#define后全要大写, 如#define TRUE 1
    . 与 -&gt; 使用
  当传递的是数组本身的时候用.
  当传递的是指针的时候用-&gt;
    定义SqList思路
  ElemType 类型的 data[MAXSIZE]数组
  必须确定当前的线性表的长度 int length]]></description>
</item><item>
    <title>Vps</title>
    <link>https://fengqigang.cn/posts/vps/</link>
    <pubDate>Fri, 23 Oct 2020 11:33:32 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://fengqigang.cn/posts/vps/</guid>
    <description><![CDATA[<p>my vps config</p>]]></description>
</item><item>
    <title>Pomodoro</title>
    <link>https://fengqigang.cn/posts/pomodoro/</link>
    <pubDate>Wed, 14 Oct 2020 16:52:57 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://fengqigang.cn/posts/pomodoro/</guid>
    <description><![CDATA[<p>The minimalistic way to use Pomodoro on Archlinux.</p>]]></description>
</item><item>
    <title>Hugo</title>
    <link>https://fengqigang.cn/posts/hugo/</link>
    <pubDate>Tue, 13 Oct 2020 16:46:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://fengqigang.cn/posts/hugo/</guid>
    <description><![CDATA[<p>Hugo is one of the most popular open-source static site generators.</p>]]></description>
</item><item>
    <title>重复包含</title>
    <link>https://fengqigang.cn/posts/%E9%87%8D%E5%A4%8D%E5%8C%85%E5%90%AB/</link>
    <pubDate>Thu, 24 Sep 2020 20:47:04 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://fengqigang.cn/posts/%E9%87%8D%E5%A4%8D%E5%8C%85%E5%90%AB/</guid>
    <description><![CDATA[重复包含问题的解决 1. 在main.cpp中只需要包含xxx.h即可，不需要包含xxx.cpp   原因分析：
PS: 命令中没有提到&quot;speak.h&quot;文件(原因是:在&quot;speak.cpp&quot;中已经包含了&quot;speak.h&quot;)
  2. 在xxx.h中，需要写上, 而xxx.cpp不需要写 1 2 3 4 5  #ifndef xxxxx #define xxxxx (...) #endif      原因分析：
C++是采用独立编译，就是每个cpp单独编译成对应的.o文件，最后链接器再将多个.o文件链接成可执行程序。(防止同一个.o文件中包含多个相同的.h内容)
  3. 使用xxx.h与xxx.cpp这种方式的时候，声明放在xxx.h中，定义放在xxx.cpp中   原因分析：
C++是采用独立编译，就是每个cpp单独编译成对应的.o文件，最后链接器再将多个.o文件链接成可执行程序。(在将多个.o文件链接成可执行程序的时候，有可能会在不同的.o文件中含有相同的定义)
  参考文章 注意头文件规则，避免链接错误：重复定义(multiple defination) 编译链接 C++
Compiling Cpp]]></description>
</item><item>
    <title>Archlinux</title>
    <link>https://fengqigang.cn/posts/archlinux/</link>
    <pubDate>Mon, 21 Sep 2020 16:20:08 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://fengqigang.cn/posts/archlinux/</guid>
    <description><![CDATA[<p>Arch Linux is an independently developed, x86_64-optimised Linux distribution targeted at competent Linux users.</p>]]></description>
</item></channel>
</rss>
